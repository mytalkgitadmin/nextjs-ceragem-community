@use "@/styles/var.scss" as *;

.formWrap {
  width: calc(100% - (convertRem(20) * 2));
  margin: convertRem(20) auto;

  height: convertRem(100);
  padding: 1em;
  box-sizing: border-box;
  border-radius: $borderRadius;
  border: 1px solid var(--primary-border);
  display: flex;
  align-items: flex-end;
  gap: 1em;
  transition: border 0.3s;
  .textarea {
    flex-grow: 1;
  }
  .buttons {
    flex-shrink: 0;
    display: flex;
    gap: convertRem(4);
  }

  &:focus-within {
    border-color: var(--primary);
  }
}
.textarea {
  height: 100%;
  outline: none;

  &::placeholder {
    font-size: 0.9em;
    color: var(--text3);
  }
}

.button {
  width: convertRem(40);
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: var(--primary-bg1);
  color: var(--primary);
  position: relative;
  overflow: hidden;
  transition: all 0.2s ease;

  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 1.3em;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &:hover:not(:disabled) {
    transform: scale(1.05);
    background-color: var(--primary);
    color: white;

    svg {
      transform: translateY(convertRem(-1));
    }
  }

  &.isSending {
    background-color: var(--primary);
    color: white;

    svg {
      animation: arrowLaunch 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite,
        arrowPulse 1.2s ease-in-out infinite;
    }

    // 배경에 펄스 효과 추가
    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 100%;
      height: 100%;
      background-color: var(--primary);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      animation: buttonPulse 1s ease-in-out infinite;
      z-index: -1;
    }
  }
}
label.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.3s;
}
// 메인 화살표 발사 애니메이션
@keyframes arrowLaunch {
  0% {
    transform: translateY(0) scale(1) rotate(0deg);
    opacity: 1;
  }

  20% {
    transform: translateY(convertRem(-2)) scale(1.05) rotate(-2deg);
    opacity: 0.95;
  }

  50% {
    transform: translateY(convertRem(-8)) scale(0.95) rotate(1deg);
    opacity: 0.7;
  }

  80% {
    transform: translateY(convertRem(-18)) scale(0.8) rotate(-1deg);
    opacity: 0.3;
  }

  100% {
    transform: translateY(convertRem(-30)) scale(0.6) rotate(0deg);
    opacity: 0;
  }
}

// 화살표 펄스 효과
@keyframes arrowPulse {
  0%,
  100% {
    filter: brightness(1);
  }

  50% {
    filter: brightness(1.2);
  }
}

// 버튼 배경 펄스 효과
@keyframes buttonPulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.7;
  }

  50% {
    transform: translate(-50%, -50%) scale(1.1);
    opacity: 0.4;
  }

  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0;
  }
}
